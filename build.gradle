buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
plugins {
    id 'org.ajoberstar.grgit' version '3.1.1'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = "${project.mc_version}-${project.mod_version}"
group = "${project.maven_group}"
archivesBaseName = "${project.mod_id}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: project.mappings_channel, version: "${project.mappings_version}-${project.mappings_mc_version}"
    //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                whisperwoods {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                whisperwoods {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = "JEI"
        url = "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"
    compileOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${jei_version}")
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  options.compilerArgs = [
    '-Xlint:deprecation', // deprecation, rawtypes, cast, unchecked, all
    '-Xlint:unchecked',
  ]
}

task setupGithubActions(type: Exec) {
    def getVersion = {
        //TAG-offset-hash
        def raw = grgit.describe(longDescr: true, tags:true)
        def desc = (raw == null ? '0.0-0-unknown' : grgit.describe(longDescr: true, tags:true)).split('-') as List
        def hash = desc.remove(desc.size() - 1)
        def offset = desc.remove(desc.size() - 1)
        def tag = desc.join('-')
        def branch = grgit.branch.current().name
        if (branch in ['master', 'HEAD', project.mc_version, project.mc_version + '.0'])
            branch = null
        if (branch != null && branch.endsWith('.x') && project.mc_version.startsWith(branch.substring(0, branch.length() - 2))) //1.13.x
            branch = null
        return "${project.mc_version}-${tag}.${offset}${t -> if (branch != null) t << '-' + branch}".toString() //Bake the response instead of making it dynamic
    }
    version = getVersion();
    commandLine "echo '::set-output name=version::${project.version}'"
}

jar {
    manifest {
        attributes(["Specification-Title": archivesBaseName,
                    "Specification-Vendor": "its_meow",
                    "Specification-Version": "${project.mod_version}",
                    "Implementation-Title": archivesBaseName,
                    "Implementation-Version": "${project.mod_version}",
                    "Implementation-Vendor" :"its_meow",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}
